openapi: 3.0.0
info:
  title: Skinvault Marketplace API
  version: "1.0.0"
  description: Documentação da API para o mercado de skins de CS.
servers:
  - url: http://localhost:3333
    description: Servidor de Desenvolvimento

# =======================================================
# 1. TAGS
# Definimos todas as "categorias" da sua API
# =======================================================

paths:
  # --- Rotas de User e Auth ---
  /users:
    $ref: "./paths/user/users.yaml" # (POST /users, GET /users)
  /session:
    $ref: "./paths/user/session.yaml" # (POST /session)
  /users/{id}:
    $ref: "./paths/user/users_id.yaml" # (GET /users/:id)

  # --- Rotas de Inventory ---
  /user/inventory:
    $ref: "./paths/user/user_inventory.yaml" # (GET /user/inventory)

  # --- Rotas de Wallet ---
  /wallet/balance:
    $ref: "./paths/user/wallet_balance.yaml" # (GET /wallet/balance)
  /wallet/transaction:
    $ref: "./paths/user/wallet_transaction.yaml" # (GET /wallet/transaction)
  /category:
    $ref: "./paths/category/category.yaml"

components:
  # --- Definição da Segurança ---
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Token JWT Bearer obtido na rota /session."

  # --- CORREÇÃO PRINCIPAL: O Mapa de Schemas ---
  # Esta seção é um MAPA, não um $ref único.
  schemas:
    # Schemas de common.yaml
    UnauthorizedError:
      $ref: "./components/schemas/user/common.yaml#/UnauthorizedError"
    NotFoundError:
      $ref: "./components/schemas/user/common.yaml#/NotFoundError"

    # Schemas de user.yaml
    CreateUserRequest:
      $ref: "./components/schemas/user/user.yaml#/CreateUserRequest"
    UserResponse:
      $ref: "./components/schemas/user/user.yaml#/UserResponse"
    PublicUserResponse:
      $ref: "./components/schemas/user/user.yaml#/PublicUserResponse"
    ErrorResponse:
      $ref: "./components/schemas/user/user.yaml#/ErrorResponse"

    # Schemas de auth.yaml
    AuthRequest:
      $ref: "./components/schemas/user/auth.yaml#/AuthRequest"
    AuthResponse:
      $ref: "./components/schemas/user/auth.yaml#/AuthResponse"
    AuthError:
      $ref: "./components/schemas/user/auth.yaml#/AuthError"

    # Schemas de inventory.yaml
    InventoryItem:
      $ref: "./components/schemas/user/inventory.yaml#/InventoryItem"
    InventoryResponse:
      $ref: "./components/schemas/user/inventory.yaml#/InventoryResponse"

    # Schemas de wallet.yaml
    WalletBalanceResponse:
      $ref: "./components/schemas/user/wallet.yaml#/WalletBalanceResponse"
    TransactionItem:
      $ref: "./components/schemas/user/wallet.yaml#/TransactionItem"
    WalletTransactionResponse:
      $ref: "./components/schemas/user/wallet.yaml#/WalletTransactionResponse"

    #Category
    CreateCategoryRequest:
      $ref: "./components/schemas/category/category.yaml#/CreateCategoryRequest"
    CategoryResponse:
      $ref: "./components/schemas/category/category.yaml#/CategoryResponse"
    CategoryErrorResponse:
      $ref: "./components/schemas/category/category.yaml#/CategoryErrorResponse"
